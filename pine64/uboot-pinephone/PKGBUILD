# Maintainer: Danct12 <danct12@disroot.org>
# TODO: Find a way to build crust inside this PKGBUILD, right now it is prebuilt.

buildarch=8

pkgname=uboot-pinephone
pkgver=v2021.01_rc4
pkgrel=1
pkgdesc="U-Boot for PinePhone (contains crust scp firmware)"
arch=('aarch64')
url='http://www.denx.de/wiki/U-Boot/WebHome'
license=('GPL')
depends=('uboot-tools') # we need this for mkscr
makedepends=('bc' 'python' 'swig' 'dtc' 'python-setuptools')
install=${pkgname}.install
backup=("boot/boot.txt")

_commit_uboot="7492749fec31b1086bc8933bf113a766aea021aa"
_commit_atf="ddf9d186a0060eec0beecc69ebe717053ea0f572"

source=("u-boot-$_commit_uboot.tar.gz::https://gitlab.com/pine64-org/u-boot/-/archive/${_commit_uboot}/u-boot-${_commit_uboot}.tar.gz"
        "arm-trusted-firmware-$_commit_atf.tar.gz::https://github.com/crust-firmware/arm-trusted-firmware/archive/${_commit_atf}.tar.gz"
        '0001-ATF-set-fno-stack-protector.patch'
        '0001-configs-Add-Pinetab-configuration.patch'
        'boot.txt'
        'mkscr'
        'scp.bin')
md5sums=('1164b7e402a752cc9bec6be2f7d9dfae'
         '968fa8240c3cfe43d97007c0c50ecbdc'
         '348a6943a1c220047ce5312b59da95b6'
         'bdb8e9686df7fccbedf8577a8d3e350a'
         '90caaaf7c972240e2992c5c46102b2e9'
         '021623a04afd29ac3f368977140cfbfd'
         'd0568f89aac3969b94f15f0b371b9834')

prepare() {
  cd arm-trusted-firmware-${_commit_atf}
  patch -N -p1 < ../0001-ATF-set-fno-stack-protector.patch

  cd ../u-boot-${_commit_uboot}
  patch -N -p1 < ../0001-configs-Add-Pinetab-configuration.patch

  cp ../scp.bin .
}

build() {
  unset CFLAGS CXXFLAGS CPPFLAGS LDFLAGS

  cd arm-trusted-firmware-${_commit_atf}

  make PLAT=sun50i_a64 DEBUG=1 bl31
  cp build/sun50i_a64/debug/bl31.bin ../u-boot-${_commit_uboot}

  cd ../u-boot-${_commit_uboot}

  # This builds the PineTab (624)
  msg2 "Building U-Boot for PineTab..."
  make distclean
  make pinetab_defconfig
  echo 'CONFIG_IDENT_STRING=" DanctNIX ARM"' >> .config
  echo 'CONFIG_SERIAL_PRESENT=y' >> .config
  echo 'CONFIG_GZIP=y' >> .config
  echo 'CONFIG_CMD_UNZIP=y' >> .config
  echo 'CONFIG_CMD_EXT4=y' >> .config
  echo 'CONFIG_SUPPORT_RAW_INITRD=y' >> .config
  echo 'CONFIG_CMD_EXT4_WRITE=n' >> .config
  echo 'CONFIG_EXT4_WRITE=n' >> .config
  make EXTRAVERSION=-${pkgrel}
  mv u-boot-sunxi-with-spl.bin u-boot-sunxi-with-spl-pinetab-624.bin

  # Now we build PineTab (552)
  echo 'CONFIG_DRAM_CLK=552' >> .config
  make EXTRAVERSION=-${pkgrel}
  mv u-boot-sunxi-with-spl.bin u-boot-sunxi-with-spl-pinetab-552.bin

  # Now we build PineTab (492)
  echo 'CONFIG_DRAM_CLK=492' >> .config
  make EXTRAVERSION=-${pkgrel}
  mv u-boot-sunxi-with-spl.bin u-boot-sunxi-with-spl-pinetab-492.bin

  # This builds the PinePhone (624)
  msg2 "Building U-Boot for PinePhone..."
  make pinephone_defconfig
  echo 'CONFIG_IDENT_STRING=" DanctNIX ARM"' >> .config
  echo 'CONFIG_SERIAL_PRESENT=y' >> .config
  echo 'CONFIG_GZIP=y' >> .config
  echo 'CONFIG_CMD_UNZIP=y' >> .config
  echo 'CONFIG_CMD_EXT4=y' >> .config
  echo 'CONFIG_SUPPORT_RAW_INITRD=y' >> .config
  echo 'CONFIG_CMD_EXT4_WRITE=n' >> .config
  echo 'CONFIG_EXT4_WRITE=n' >> .config
  echo 'CONFIG_DRAM_CLK=624' >> .config
  make EXTRAVERSION=-${pkgrel}
  mv u-boot-sunxi-with-spl.bin u-boot-sunxi-with-spl-pinephone-624.bin

  # Now we build PinePhone (552)
  echo 'CONFIG_DRAM_CLK=552' >> .config
  make EXTRAVERSION=-${pkgrel}
  mv u-boot-sunxi-with-spl.bin u-boot-sunxi-with-spl-pinephone-552.bin

  # Now we build PinePhone (492)
  echo 'CONFIG_DRAM_CLK=492' >> .config
  make EXTRAVERSION=-${pkgrel}
  mv u-boot-sunxi-with-spl.bin u-boot-sunxi-with-spl-pinephone-492.bin
}

package() {
  cd u-boot-${_commit_uboot}

  mkdir -p "${pkgdir}"/boot

  cp u-boot-sunxi-with-spl-pinetab{-624,-552,-492}.bin "${pkgdir}"/boot
  cp u-boot-sunxi-with-spl-pinephone{-624,-552,-492}.bin "${pkgdir}"/boot

  cp ../boot.txt ../mkscr "${pkgdir}"/boot
}
